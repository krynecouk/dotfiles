{
  // General -----------------------------------
  "editor.insertSpaces": true,
  "editor.tabSize": 2,
  "editor.lineNumbers": "relative",
  "editor.suggestSelection": "first",
  "editor.inlineSuggest.enabled": true,
  "editor.guides.indentation": false,
  "editor.codeActionsOnSave": {
    "source.organizeImports": true
  },
  "editor.smoothScrolling": true,
  "git.decorations.enabled": false,

  "files.trimTrailingWhitespace": true,
  "files.autoSave": "afterDelay",

  "zenMode.hideLineNumbers": false,
  "zenMode.fullScreen": false,
  "zenMode.hideStatusBar": false,

  "workbench.editor.showTabs": false,
  "workbench.editor.enablePreview": false,
  "workbench.startupEditor": "none",
  "workbench.layoutControl.enabled": false,
  "workbench.tree.renderIndentGuides": "none",
  "workbench.panel.defaultLocation": "right",
  "window.openFoldersInNewWindow": "on",

  "explorer.openEditors.visible": 1,
  "window.nativeTabs": true,
  "security.workspace.trust.untrustedFiles": "open",

  // Theme -----------------------------------
  "editor.fontFamily": "'Fira Code', Consolas, 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.fontSize": 12.5,
  "editor.fontWeight": "500",
  "workbench.colorTheme": "Dracula",

  // Vim ---------------------------------------
  "vim.statusBarColorControl": false,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.incsearch": true,
  "vim.smartcase": true,
  "vim.useSystemClipboard": true,

  // Bindings
  "vim.leader": "<space>",
  "vim.normalModeKeyBindingsNonRecursive": [
    // Navigation
    {
      "before": ["<esc>", "<esc>"],
      "commands": ["notifications.clearAll", ":only", ":noh"]
    },
    {
      "before": ["<leader>", "<leader>"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<leader>", "*"],
      "commands": ["workbench.action.findInFiles"]
    },
    {
      "before": ["<leader>", ","],
      "commands": [
        "workbench.action.showAllEditorsByMostRecentlyUsed",
        "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
      ]
    },
    {
      "before": ["<leader>", "*"],
      "commands": ["workbench.action.findInFiles"]
    },
    {
      "before": ["'"],
      "commands": ["bookmarks.listFromAllFiles"]
    },
    {
      "before": ["\""],
      "commands": ["clipring.selectAndPasteRingItem"]
    },
    {
      "before": ["m"],
      "commands": ["bookmarks.toggleLabeled"]
    },
    // Code
    {
      "before": ["K"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["g", "u"],
      "commands": ["editor.action.goToReferences"]
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.goToReferences"]
    },
    {
      "before": ["g", "]"],
      "commands": ["editor.action.marker.nextInFiles"]
    },
    {
      "before": ["g", "["],
      "commands": ["editor.action.marker.prevInFiles"]
    },
    {
      "before": ["<leader>", "f", "f"],
      "commands": [
        {
          "command": "editor.action.formatDocument"
        },
        {
          "command": "python.sortImports"
        }
      ]
    },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.codeAction"]
    },
    {
      "before": ["<leader>", "g", "g"],
      "commands": ["magit.status"]
    },
    {
      "before": ["Y"],
      "commands": [
        {
          "command": "cursorEndSelect",
          "when": "textInputFocus",
          "args": { "sticky": false }
        },
        {
          "command": "execCopy"
        },
        {
          "command": "cancelSelection",
          "when": "editorHasSelection && textInputFocus"
        }
      ]
    },
    // Project
    {
      "before": ["<leader>", "p", "p"],
      "commands": ["workbench.action.openRecent"]
    },
    {
      "before": ["<leader>", "p", "o"],
      "commands": ["workbench.action.files.openFileFolder"]
    },
    {
      "before": ["<leader>", "p", "w"],
      "commands": ["workbench.action.files.saveAll"]
    },
    // Open/Toggle
    {
      "before": ["<leader>", "o", "t"],
      "commands": ["workbench.action.terminal.focus"]
    },
    {
      "before": ["ctrl+`"],
      "commands": ["workbench.action.terminal.toggleTerminal"]
    },
    {
      "before": ["<leader>", "t", "t"],
      "commands": ["workbench.view.explorer"]
    },
    {
      "before": ["ctrl+t"],
      "commands": ["workbench.view.explorer"]
    },
    {
      "before": ["<leader>", "t", "s"],
      "commands": ["workbench.action.toggleActivityBarVisibility"]
    },
    {
      "before": ["<leader>", "p", "t"],
      "commands": [
        {
          "command": "workbench.view.extension.test"
        },
        {
          "command": "test-explorer.run-all"
        },
        {
          "command": "workbench.action.focusActiveEditorGroup"
        }
      ]
    },
    {
      "before": ["<leader>", "o", "o"],
      "commands": ["notifications.clearAll", ":only", ":noh"]
    },
    {
      "before": ["<leader>", "t", "F"],
      "commands": ["workbench.action.toggleFullScreen"]
    },
    {
      "before": ["<leader>", "t", "z"],
      "commands": ["workbench.action.toggleZenMode"]
    }
  ],
  "vim.visualModeKeyBindings": [
    {
      "before": ["<leader>", "f", "f"],
      "commands": ["editor.action.formatSelection"]
    }
  ],

  // Lang ---------------------------------------
  // Web
  "[typescript]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
  "svelte.enable-ts-plugin": true,
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "playwright.reuseBrowser": true,
  "playwright.showTrace": false,
  // Python
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true
  },
  "python.testing.pytestArgs": ["tests"],
  "python.testing.unittestEnabled": false,
  "python.testing.pytestEnabled": true,
  "editor.minimap.enabled": false,
  "workbench.activityBar.visible": false,
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  }
}
